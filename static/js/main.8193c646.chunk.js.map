{"version":3,"sources":["Home.js","signUpComp/contactDetails.js","signUpComp/verifyEmail.js","signUpComp/UserBioData.js","signUpComp/SignUpHome.js","Signup.js","signInComp/LoginForm.js","SignIn.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","LoginSchema","Yup","shape","email","required","phone","max","UserDetails","continue","e","preventDefault","props","nextStep","this","handleChange","handleSubmit","initialValues","validationSchema","onSubmit","values","setSubmitting","isValidating","setTimeout","console","log","JSON","stringify","touched","errors","getFieldProps","isSubmitting","validateForm","name","type","value","onChange","htmlFor","disabled","Component","VerifyEmail","placeholder","onClick","UserBioDataSchema","firstName","min","lastName","BVNumber","UserBioData","check","DoB","id","inputMode","helptext","CreateForm","state","step","confirmEmail","setState","prevStep","input","target","showStep","confirmCode","SignUpForm","LoginForm","formik","useFormik","password","window","location","href","validate","SignInForm","Dashboard","App","path","component","exact","Signup","SignIn","width","height","viewBox","fill","xmlns","fillRule","d","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8193c646.chunk.js","sourcesContent":["import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"mainHome\">\r\n\r\n          \r\n          \r\n          \r\n          <h2>Welcome to the Homepage of JD</h2>\r\n          <p>This homepage is under construction. You can create and manage your dashboard from <Link to='/Signup'>here</Link>.</p>\r\n\r\n          <p className=\"SignInLink\">\r\n          <Link to= '/SignIn'>Sign In</Link> instead         \r\n          </p>\r\n    \r\n    \r\n    </div>\r\n            \r\n            \r\n    \r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\n//import ReactDOM from \"react-dom\";\r\nimport { Formik, Form, Field, useFormik, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n//import { Link } from 'react-router-dom';\r\n//import { queryByDisplayValue } from \"@testing-library/react\";\r\n//import { useForm } from 'react-hook-form';\r\n//import {useFormik} from 'formik';\r\n//import SignUpMainForm from './signUpForm'\r\n\r\n//import './signInComp/signIn.css';\r\n//import * as EmailValidator from \"email-validator\";\r\n//import * as Yup from \"yup\";\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Invalid email address format\")\r\n    .required(\"Your Email is required to continue\"),\r\n  phone: Yup.string()\r\n    .max(14, \"Incorrect Phone Number\")\r\n    .required(\"Your Phone Number is required to continue\")\r\n});\r\n\r\n\r\n\r\n\r\nclass UserDetails extends Component{\r\n    \r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n\r\n\r\n        \r\n        const { email, phone, handleChange, handleSubmit } = this.props;\r\n        return(\r\n              <div className= \"leftClass\">\r\n                        <Formik\r\n                        //onSubmit={this.continue} \r\n                        initialValues={{ email: \"\", phone: \"\" }}\r\n                        validationSchema={LoginSchema}\r\n                        onSubmit={(values, { setSubmitting, isValidating }) => {\r\n                            setTimeout(() => {\r\n                              console.log(JSON.stringify(values, null, 2));\r\n                              setSubmitting(true);\r\n                            }, 400);\r\n                            \r\n                        } \r\n            \r\n                      }\r\n              \r\n                        \r\n                        >\r\n                                {({ touched, errors, getFieldProps, isSubmitting, validateForm}) => (<Form onSubmit={handleSubmit}>\r\n                                        \r\n                                <div>   \r\n                                        <Field\r\n                                            \r\n                                            name=\"email\"\r\n                                            type=\"email\"\r\n                                            value={email}\r\n                                            onChange={handleChange('email')}\r\n                                            {...getFieldProps('email')}\r\n                                            \r\n                                          \r\n                                            required\r\n                                        />\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                        {touched.email && errors.email ? <div className = \"errorMessage\">{errors.email}</div> : null}\r\n                                \r\n                                </div>\r\n                                \r\n\r\n                                <div>\r\n                                            <Field\r\n                                                //useRef = {register}\r\n                                                name=\"phone\"\r\n                                                type=\"tel\"\r\n                                                value={phone}\r\n                                                onChange={handleChange('phone')}\r\n                                                {...getFieldProps('phone')}\r\n                                                required\r\n                                                \r\n                                            />\r\n                                            <label htmlFor=\"phone\">Phone Number</label>\r\n                                            {touched.phone && errors.phone ? <div className = \"errorMessage\">{errors.phone}</div> : null}\r\n                                            \r\n                                </div>\r\n                                <button type=\"submit\" className=\"Next\" disabled={isSubmitting}>\r\n                                    {isSubmitting ? \"Sending Verification Code...\" : \"Proceed\"}\r\n                                </button>\r\n\r\n                                {/*<p className=\"recover\">\r\n                                <Link to= '/SignIn'>Log In</Link> Instead | <Link to= '/'>See our Offer</Link>\r\n                                </p>*/}\r\n                            </Form>)}\r\n\r\n                        </Formik>\r\n              </div> \r\n                \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default UserDetails;\r\n","import React, { Component } from 'react';\r\n\r\nclass VerifyEmail extends Component {\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    \r\n    //back = e => {\r\n     //   e.preventDefault();\r\n       // this.props.prevStep();\r\n    //}\r\n    render(){\r\n        const { email } = this.props;\r\n        return(\r\n            <div className=\"verifyEmailClass\">\r\n                <p>We just sent a verification code to the email address you provided, <b>{email}</b>. Enter the code to continue.</p>\r\n                \r\n                <div>\r\n                    <input\r\n                        name=\"verify\"\r\n                        type=\"text\"\r\n                        placeholder = \"Verification Code\"\r\n                        //{...formik.getFieldProps('phone')}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                \r\n\r\n                <button className=\"Back\" onClick={this.continue}>\r\n                    Verify Email\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VerifyEmail;","import React, {Component} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Formik, Form, Field, useFormik, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from 'react-router-dom';\r\nimport { queryByDisplayValue } from \"@testing-library/react\";\r\n//import { useForm } from 'react-hook-form';\r\n//import {useFormik} from 'formik';\r\n//import SignUpMainForm from './signUpForm'\r\n\r\n//import './signInComp/signIn.css';\r\n//import * as EmailValidator from \"email-validator\";\r\n//import * as Yup from \"yup\";\r\nconst UserBioDataSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(2, \"First Name should be two alphabets or more\")\r\n    .required(\"Required\"),\r\n\r\n  lastName: Yup.string()\r\n    .min(2, \"Last Name should be two alphabets or more\")\r\n    .required(\"Required\"),\r\n\r\n\r\n  //DoB: Yup.string().date.min(01-01-2002, \"You must be 18 years to proceed\").required(\"Date of Birth is Required\"),\r\n\r\n  BVNumber: Yup.string().min(14, \"Bank Verification Number is Incomplete\")\r\n    .max(14, \"Bank Verification Number is Incorrect\")\r\n    .required(\"Bank Verification Number is required\"),\r\n\r\n   \r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass UserBioData extends Component{\r\n    \r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render(){\r\n\r\n\r\n        \r\n        const { email, phone, check, firstName, lastName, DoB, BVNumber, handleChange} = this.props;\r\n        return(\r\n              <div className= \"leftClass\">\r\n                        <Formik\r\n                        onSubmit={this.continue} \r\n                        initialValues={{}}\r\n                        validationSchema={UserBioDataSchema}\r\n                        onSubmit={(values, { setSubmitting, isValidating }) => {\r\n                              setTimeout(() => {\r\n                                console.log(JSON.stringify(values, null, 2));\r\n                                setSubmitting(true);\r\n                              }, 400);\r\n                              \r\n                          } \r\n              \r\n                        }\r\n                        \r\n\r\n                          \r\n                        >\r\n                                {({ touched, errors, getFieldProps, isSubmitting, }) => (<Form props={this.props}>\r\n                                        \r\n                                <div className=\"userNames\">\r\n                                    <div className=\"firstName\">   \r\n                                        <Field\r\n                                            //useRef = {register}\r\n                                            name=\"firstName\"\r\n                                            type=\"name\"\r\n                                            value={firstName}\r\n                                            onChange={handleChange('firstName')}\r\n                                            {...getFieldProps('firstName')}\r\n                                            \r\n                                            //{...formik.getFieldProps('email')}\r\n                                            required\r\n                                        />\r\n                                        <label htmlFor=\"firstName\">First Name</label>\r\n                                        {touched.firstName && errors.firstName ? <div className = \"errorMessage\">{errors.firstName}</div> : null}\r\n                                    </div>\r\n                                    <div className=\"lastName\">\r\n                                          <Field\r\n                                          //useRef = {register}\r\n                                          name=\"lastName\"\r\n                                          type=\"name\"\r\n                                          value={lastName}\r\n                                          onChange={handleChange('lastName')}\r\n                                          {...getFieldProps('lastName')}\r\n                                          \r\n                                          //{...formik.getFieldProps('email')}\r\n                                          required\r\n                                      />\r\n                                      <label htmlFor=\"lastName\">Last Name</label>\r\n                                      {touched.lastName && errors.lastName ? <div className = \"errorMessage\">{errors.lastName}</div> : null}\r\n\r\n                                    </div>\r\n                                </div>\r\n                                 \r\n\r\n                                <div className=\"DateofBirth\">\r\n                                    <input  name=\"date\"\r\n                                            type=\"date\" \r\n                                            id=\"start\" \r\n                                            value={DoB}\r\n                                            placeholder=\" \"\r\n                                            onChange={handleChange('DoB')}\r\n                                                {...getFieldProps('DoB')}\r\n                                                required\r\n                                          />\r\n                                    <label htmlFor=\"start\">Date of Birth</label>\r\n                                    <p className=\"BVNinfo\">Please ensure the birth date provided is same as what's captured at your bank. This is required for verification.</p>\r\n                                    \r\n                                </div>\r\n\r\n                                <div>\r\n                                            <Field\r\n                                                //useRef = {register}\r\n                                                name=\"BVNumber\"\r\n                                                type=\"BVNumber\"\r\n                                                inputMode=\"numeric\"\r\n                                                value={BVNumber}\r\n                                                helptext=\"Must be 8-20 characters and cannot contain special characters.\"\r\n                                                onChange={handleChange('BVNumber')}\r\n                                                {...getFieldProps('BVNumber')}\r\n                                                required\r\n                                                \r\n                                            />\r\n                                            <label htmlFor=\"BVNumber\">Bank Verification Number</label>\r\n                                            \r\n                                            {touched.BVNumber && errors.BVNumber ? <div className = \"errorMessage\">{errors.BVNumber}</div> : null}\r\n                                            \r\n                                </div>\r\n\r\n                                \r\n                                <button type=\"submit\" className=\"Next\" onClick={this.continue} disabled={isSubmitting}>\r\n                                    {isSubmitting ? \"Sending Verification Code...\" : \"Proceed\"}\r\n                                </button>\r\n\r\n                                {/*<p className=\"recover\">\r\n                                <Link to= '/SignIn'>Log In</Link> Instead | <Link to= '/'>See our Offer</Link>\r\n                                </p>*/}\r\n                            </Form>)}\r\n\r\n                        </Formik>\r\n              </div> \r\n                \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default UserBioData;\r\n","import React, {Component} from \"react\";\r\nimport UserDetails from './contactDetails';\r\nimport VerifyEmail from './verifyEmail';\r\nimport UserBioData from './UserBioData'\r\n//import { useFormik } from 'formik';\r\n//import { Link } from 'react-router-dom';\r\n//import './signInComp/signIn.css';\r\n//import * as EmailValidator from \"email-validator\";\r\n//import * as Yup from \"yup\";\r\n\r\n\r\nclass CreateForm extends Component{\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n    state = {\r\n        step: 1,\r\n\r\n        //Step 1,\r\n        email: '',\r\n        phone: '',\r\n\r\n        //Step 2\r\n        confirmEmail: '',\r\n\r\n        //step 3\r\n        firstName: '',\r\n        lastName:'',\r\n        DoB: '',\r\n        BVNumber: '',\r\n\r\n    }\r\n\r\n    //Move to Next Step \r\n    nextStep = () =>{\r\n        const {step} = this.state;\r\n\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n\r\n    //Move to Previous Step\r\n    prevStep = () =>{\r\n        const {step} = this.state;\r\n\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState ({[input]: e.target.value})\r\n    }\r\n\r\n    //Show Present Step\r\n    showStep = () => {\r\n        \r\n        const {step, email, phone, confirmCode, firstName, lastName, DoB, BVNumber} = this.state;\r\n        if (step === 1)\r\n            return (\r\n                <UserDetails \r\n                    handleChange={this.handleChange}\r\n                    nextStep = {this.nextStep}\r\n                    email={email} \r\n                    phone={phone} \r\n                \r\n                />);\r\n\r\n        if(step === 2)\r\n                return (<VerifyEmail \r\n                    nextStep = {this.nextStep} \r\n                    //prevStep = {this.prevStep}\r\n                    handleChange = {this.handleChange}\r\n                    email={email}  \r\n                    confirmCode={confirmCode}\r\n                     \r\n                />);\r\n\r\n        if(step === 3)\r\n                return (<UserBioData\r\n                    nextStep = {this.nextStep} \r\n                    prevStep = {this.prevStep}\r\n                    handleChange = {this.handleChange}\r\n                    firstName={firstName}  \r\n                    lastName={lastName}\r\n                    DoB={DoB}\r\n                    BVNumber={BVNumber}\r\n                     \r\n                />);\r\n\r\n    }\r\n\r\n    render(){\r\n        const {step} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                {this.showStep()}\r\n        {/*<h5>Step {step} of 3</h5>*/}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CreateForm\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import logo from './logo.svg';\r\nimport './signInComp/signIn.css'\r\n//import './signUpComp/signUp.css';\r\nimport CreateForm from './signUpComp/SignUpHome';\r\nimport userDetails from './signUpComp/contactDetails';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\n\r\nfunction SignUpForm() {\r\n  return (\r\n    <div className=\"Dashboard\">\r\n        <section>\r\n          <div className=\"allDashBoard\">\r\n\r\n              <div className=\"productDetails\">\r\n                <div className=\"productName\">\r\n                  <p>Package</p>\r\n                  <h2 className = \"signIn\">JD Benefit Plan</h2>\r\n                </div>\r\n                <div className=\"line\"></div>\r\n\r\n                <CreateForm />\r\n                \r\n                <p className=\"recover\">\r\n                        <Link to= '/SignIn'>Log In</Link> Instead | <Link to= '/'>See our Offer</Link>\r\n                </p>\r\n                                \r\n                    \r\n                        \r\n              </div>\r\n\r\n              <div className=\"productPay\">\r\n                  {/*<svg width=\"1.8em\" height=\"1.8em\" viewBox=\"0 0 16 16\" class=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fill-rule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\r\n                    <path fill-rule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\r\n  </svg>*/}\r\n              </div>\r\n\r\n         \r\n          </div>\r\n        \r\n        </section>\r\n                      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;","import React from \"react\";\r\nimport { useFormik } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\n//import './signInComp/signIn.css';\r\nimport * as EmailValidator from \"email-validator\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\n\r\nconst LoginForm = () => {\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                email: '',\r\n                password: '',\r\n            },\r\n\r\n            \r\n            onSubmit: values => {\r\n                console.log('form value', formik.values);\r\n                window.location.href =\"/Dashboard\";\r\n            },\r\n\r\n            validate: value => {\r\n                let errors = {}\r\n                if(!value.email) {\r\n                    errors.email= 'Your email is required to continue'\r\n                }\r\n\r\n                if(!value.password) {\r\n                    errors.password= 'Your password is required to continue'\r\n                }\r\n               \r\n                return errors\r\n            },\r\n\r\n            \r\n          \r\n    });\r\n\r\n    \r\n\r\n    //console.log('Visited fields', formik.touched)\r\n\r\n        return (\r\n                    <div className= \"leftClass\">\r\n                                \r\n                    \r\n                        <form onSubmit={formik.handleSubmit}>\r\n                                \r\n                                <div>   \r\n                                        <input\r\n                                            name=\"email\"\r\n                                            type=\"text\"\r\n                                            {...formik.getFieldProps('email')}\r\n                                            required\r\n                                            \r\n                                        />\r\n                                        {formik.touched.email && formik.errors.email ? <div className = \"errorMessage\">{formik.errors.email}</div> : null}\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                \r\n                                </div>\r\n\r\n                                <div>\r\n                                            <input\r\n                                                name=\"password\"\r\n                                                type=\"password\"\r\n                                                {...formik.getFieldProps('password')}\r\n                                                required\r\n                                                \r\n                                            />\r\n                                            {formik.touched.password && formik.errors.password ? <div className = \"errorMessage\">{formik.errors.password}</div> : null}\r\n                                            <label htmlFor=\"email\">Password</label>\r\n\r\n                                            \r\n                                </div>\r\n                                <button type=\"submit\" disabled={formik.isSubmitting}>\r\n                                    Continue to Dashboard\r\n                                </button>\r\n\r\n                                <p className=\"recover\">\r\n                                <Link to= '/'>Recover Account</Link> Instead | <Link to= '/SignUp'>See our Offer</Link>\r\n                                </p>\r\n                        </form>\r\n\r\n\r\n                        \r\n                    \r\n                    </div>\r\n                );\r\n }\r\n\r\nexport default LoginForm;\r\n\r\n\r\n       ","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport LoginForm from './signInComp/LoginForm'\r\nimport './signInComp/signIn.css';\r\n\r\nfunction SignInForm() {\r\n  return (\r\n    <div className=\"Dashboard\">\r\n        <section>\r\n          <div className=\"allDashBoard\">\r\n\r\n              <div className=\"productDetails\">\r\n                <div className=\"productName\">\r\n                  <h2 className = \"signIn\">Sign In</h2>\r\n                  <p className=\"subnote\">Continue to Dashboard</p>\r\n                </div>\r\n                <div className=\"line\"></div>\r\n                <LoginForm />\r\n\r\n                \r\n              </div>\r\n\r\n              <div className=\"FormProp\">\r\n              </div>\r\n\r\n\r\n              \r\n\r\n         \r\n          </div>\r\n        \r\n        </section>\r\n                      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInForm;","import React, {Component} from \"react\";\r\nimport './DashBoardHome/dashboard.css';\r\n//import ReactDOM from \"react-dom\";\r\nimport { Formik, Form, Field, useFormik, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Spinner } from 'react-bootstrap';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n//import { Link } from 'react-router-dom';\r\n//import { queryByDisplayValue } from \"@testing-library/react\";\r\n//import { useForm } from 'react-hook-form';\r\n//import {useFormik} from 'formik';\r\n//import SignUpMainForm from './signUpForm'\r\n//import './signInComp/signIn.css';\r\n//import * as EmailValidator from \"email-validator\";\r\n//import * as Yup from \"yup\";\r\n\r\n\r\n\r\n\r\n\r\nclass Dashboard extends Component{\r\n    \r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"dashboardHome\">\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            <p>Marley</p>\r\n            \r\n            </div>\r\n        )\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\nimport Home from'./Home';\nimport Signup from './Signup';\nimport SignIn from './SignIn';\nimport Dashboard from './Dashboard'\n//import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n\n\n\nfunction App() {\n  return (\n    \n    <Router>\n    \n    <div className=\"App\">\n    \n        <header>\n            <h1>\n              JD\n            </h1>\n\n        </header>\n        \n        <Route path=\"/Dashboard\" component={Dashboard}/>\n\n        <div className=\"mainMainClass\">\n        \n              <main className=\"mainClass\">         \n                      <Switch>\n                          \n                          <Route path=\"/\" exact component={Home}/>\n                      \n                          <Route path=\"/Signup\" component={Signup}/>\n\n                          <Route path=\"/SignIn\" component={SignIn}/>\n\n                          \n\n                      </Switch>\n\n              </main>\n\n        </div>\n\n        <div className= \"MiL\">\n                \n                  <p>\n                    Made with  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-heart-fill\" fill=\"#26a65b\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\n                  </svg> in Lagos\n                  </p>\n                  \n                  <h6>Contact our Support    |    Privacy Terms</h6>\n          </div>\n\n        \n    </div>\n\n    </Router>\n\n\n    \n  );\n  \n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}